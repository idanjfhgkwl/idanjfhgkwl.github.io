{"pages":[],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/10/30/hello-world/"},{"title":"8장 기본 명령어","text":"8.1 SELECT테이블 전체를 검색하려면 *12SELECT *FROM TB_CUSTOMER; 필드가 많은 테이블에서 필요한 내용만 검색하려면 ,12345SELECT CUSTOMER_CD, CUSTOMER_NM, PHONE_NUMBER, EMAILFROM TB_CUSTOMER; 필드 제목을 한글로 바꾸려면 AS (생략가능)12345SELECT CUSTOMER_CD AS 고객코드, CUSTOMER_NM AS 고객명, PHONE_NUMBER AS 전화번호, EMAIL AS 이메일FROM TB_CUSTOMER; 수정한 게 안 올라간다","link":"/2020/11/02/sql_10minutes/ch08_basic_command_language/"},{"title":"Chapter_1_2_Python_visualisation_seaborn","text":"1. Matplotlib &amp; Seaborn1-1. 기본 개요Matplotlib: 파이썬 표준 시각화 도구. 파이썬 그래프의 기본 토대. 객체지향 프로그래밍을 지원하므로 세세하게 꾸밀 수 있다. Seaborn: 파이썬 시각화 도구의 고급 버전. Matplotlib에 비해 비교적 단순한 인터페이스를 제공하기 때문에 초보자도 어렵지 않게 배울 수 있다. 1-2. matplotlib &amp; Seabon 설치설치방법은 윈도우 명령 프롬프트, MacOS, Linux 터미널에서 pip install matplotlib입력하면 되지만, 간혹 여러 환경에 따라 달라질 수 있으니 관련 싸이트에서 확인하기를 바란다. matplotlib 설치 방법: https://matplotlib.org/users/installing.html seaborn 설치 방법: https://seaborn.pydata.org/installing.html 2. 기본적인 시각화 문법 시각화 문법은 아래와 같다. 12import seaborn as snssns.name_of_graph(x, y, dataset, options) 우선 Sample 데이터를 불러와서 데이터를 확인해보자. 123456import seaborn as snsfrom tabulate import tabulatesns.set()tips = sns.load_dataset(&quot;tips&quot;)print(tabulate(tips.head(), tablefmt=&quot;pipe&quot;, headers=&quot;keys&quot;)) # Hugo 블로그 전용 위 데이터는 매우 간단한 테이블일 수 있지만, 다변량의 그래프를 하나의 이미지 안에서 어떤 형태로 그래프를 작성할 것인지 선택하는 것은 쉽지 않다. 123sns.relplot(x=&quot;total_bill&quot;, y=&quot;tip&quot;, col=&quot;time&quot;, hue=&quot;sex&quot;, style=&quot;smoker&quot;, size=&quot;size&quot;, data=tips); 소스코드에 대한 설명을 간단히 하면 아래와 같다. relplot은 다변량의 그래프를 작성할 때 사용한다. col 대신 row를 사용해도 된다. 여기에는 categorical(=범주형) 자료가 온다. (만약 값이 많으면..?) hue는 그래프에 표현되는 색상을 의미한다. style은 범주형 자료를 다르게 표현할 때 사용한다. (예: 동그라미, 별표 등) 대개 범주형 데이터를 지정한다. size 자료의 크기를 의미한다. 3. Grouped barplots123456789101112131415import seaborn as snssns.set_theme(style=&quot;whitegrid&quot;) # 축의 색상# 온라인 저장소에서 예제 데이터 세트를 로드한다.penguins = sns.load_dataset(&quot;penguins&quot;)# Draw a nested barplot by species and sexg = sns.catplot( data=penguins, kind=&quot;bar&quot;, x=&quot;species&quot;, y=&quot;body_mass_g&quot;, hue=&quot;sex&quot;, ci=&quot;sd&quot;, palette=&quot;dark&quot;, alpha=.6, height=6)g.despine(left=True)g.set_axis_labels(&quot;&quot;, &quot;Body mass (g)&quot;)g.legend.set_title(&quot;&quot;) 소스코드에 대한 설명을 간단히 하면 아래와 같다. seaborn.catplot: 하나의 수치형 변수와 하나 이상의 범주형 변수 간의 관계를 보여주는 그래프 kind: 그릴 플롯의 종류는 범주 형 좌표축 수준 플로팅 함수의 이름에 해당합니다. x, y, hue: 긴 형식의 데이터를 그리기위한 입력입니다. ci: 추정값 주위를 그리는 신뢰 구간의 크기입니다. “sd”인 경우 부트 스트랩을 건너 뛰고 관측 값의 표준 편차를 그립니다. palette: 다양한 수준의 hue변수 에 사용할 색상 입니다. alpha: ?? (그래프 투명도? 숫자가 작으면 연해진다.) height: 전체 플롯 세로 높이 (가로도 자동으로 조정된다?)","link":"/2020/11/02/kaggle_edu/Chapter_1_2_Python_visualisation_seaborn/"},{"title":"판다스 10분 완성","text":"이 소개서는 주로 신규 사용자를 대상으로 한 판다스에 대한 간략한 소개로, 더 자세한 방법은 Cookbook에서 볼 수 있습니다. 일반적으로 각 패캐지는 pd, np, plt라는 이름으로 불러옵니다. 123import pandas as pdimport numpy as npimport matplotlib.pyplot as plt 1. 객체 생성 (Object Creation)데이터 구조 소개 섹션을 참조하세요. Pandas는 값을 가지고 있는 리스트를 통해 pandas.Series를 만들고, 정수로 만들어진 인덱스를 기본값으로 불러올 것입니다. 1s = pd.Series([1,3,5,np.nan,6,8]) datetime 인덱스와 레이블이 있는 열을 가지고 있는 numpy 배열을 전달하여 데이터프레임을 만듭니다. 1dates = pd.date_range('20130101', periods=6) 1df = pd.DataFrame(np.random.randn(6,4), index=dates, columns=list('ABCD')) Series와 같은 것으로 변환될 수 있는 객체들의 dict로 구성된 데이터프레임을 만듭니다. 123456df2 = pd.DataFrame({'A' : 1., 'B' : pd.Timestamp('20130102'), 'C' : pd.Series(1,index=list(range(4)),dtype='float32'), 'D' : np.array([3] * 4,dtype='int32'), 'E' : pd.Categorical([&quot;test&quot;,&quot;train&quot;,&quot;test&quot;,&quot;train&quot;]), 'F' : 'foo' }) 데이터프레임 결과물의 열은 다양한 데이터 타입 (dtypes)으로 구성됩니다. 1df2.dtypes 2. 데이터 확인하기 (Viewing Data)Basic Section을 참조하세요. 데이터프레임의 가장 윗 줄과 마지막 줄을 확인하고 싶을 때에 사용하는 방법은 다음과 같습니다. 역자 주: 괄호() 안에는 숫자가 들어갈 수도 있고 안 들어갈 수도 있습니다. 숫자가 들어간다면, 윗 / 마지막 줄의 특정 줄을 불러올 수 있습니다. 숫자가 들어가지 않다면, 기본값인 5로 처리됩니다. 1df.head() # 시작에서 처음 5줄 불러온다. 1df.tail() # 끝에서 마지막 5줄 불러온다. 출처데잇걸즈2pandas documentation","link":"/2020/11/02/pandas_10minutes/pandas_10minutes/"}],"tags":[],"categories":[{"name":"sql_10minutes","slug":"sql-10minutes","link":"/categories/sql-10minutes/"},{"name":"kaggle_edu","slug":"kaggle-edu","link":"/categories/kaggle-edu/"},{"name":"pandas_10minutes","slug":"pandas-10minutes","link":"/categories/pandas-10minutes/"}]}